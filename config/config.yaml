data:
  dir: datasets/vangogh2photo
  size: 256

model:
  nc_A: 3             # number of channels in domain A
  nc_B: 3             # number of channels in domain B
  ngf: 64             # number of generator filters in the last conv. layer
  ndf: 64             # number of discriminator filters in the first conv. layer
  n_res_blocks: 9     # number of residual blocks in generator
  n_D_layers: 3       # number of convolutional layers in discriminator
  lambda_A: 10
  lambda_B: 10
  lambda_idt: 0.5


   parser.add_argument('--ndf', type=int, default=64, help='# of discrim filters in the first conv layer')
  parser.add_argument('--netD', type=str, default='basic', help='specify discriminator architecture [basic | n_layers | pixel]. The basic model is a 70x70 PatchGAN. n_layers allows you to specify the layers in the discriminator')
  parser.add_argument('--netG', type=str, default='resnet_9blocks', help='specify generator architecture [resnet_9blocks | resnet_6blocks | unet_256 | unet_128]')
  parser.add_argument('--n_layers_D', type=int, default=3, help='only used if netD==n_layers')
  parser.add_argument('--norm', type=str, default='instance', help='instance normalization or batch normalization [instance | batch | none]')
  parser.add_argument('--init_type', type=str, default='normal', help='network initialization [normal | xavier | kaiming | orthogonal]')
  parser.add_argument('--init_gain', type=float, default=0.02, help='scaling factor for normal, xavier and orthogonal.')
  parser.add_argument('--no_dropout', action='store_true', help='no dropout for the generator')

train:

